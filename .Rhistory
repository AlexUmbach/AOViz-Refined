data_no2 = subset(Data1, Data1$Type == "NO2")
NO2 <- ggplot(data=data_no2, aes(x=Date, y=Avg,
group = SampleName,
# fill = as.factor(get(meta_col)),
# color = as.factor(get(meta_col))
))
## Set the axis titles, legend titles, and other titles. Change the string as appropriate:
bar_axis_x <- "Time"
bar_axis_y <- "Total NO2 (µM)"
bar_legend <- "Type"
bar_x_limits <- c(0.5,0.5)
## Filter for ammonia and plot
data_no2 = subset(Data1, Data1$Type == "NO2")
NO2 <- ggplot(data=data_no2, aes(x=Days, y=Avg,
group = SampleName,
# fill = as.factor(get(meta_col)),
# color = as.factor(get(meta_col))
)) +
geom_point(size = 1, shape = 22, aes(colour = as.factor(Rep))) +
geom_smooth(method = "loess",se = FALSE, span = LineSpan, aes(colour = as.factor(Rep)), size = 1) +
geom_line(linetype = 2, size = 0.5, aes(colour = as.factor(Rep))) +
geom_ribbon(aes(ymin = StdMin, ymax = StdMax), alpha = 0.2) +
# scale_y_continuous(breaks = c(0,10,20,30,40,50),limits = c(0,nh4_lim)) +
scale_y_continuous(limits = c(0,no2_max)) +
# geom_smooth(aes(x = Days, y = Max3, colour = as.factor(Rep)), se = FALSE, span = 0.7, linetype = 2, size = 0.5) +
xlab(bar_axis_x) +
# geom_line(aes(x = Date, y = Avg_tot))+
ylab(bar_axis_y) +
NULL
## Set legend titles.
NO2 <- NO2 + guides(fill=guide_legend(title=bar_legend))
## Modify the general visual theme (i.e., background, legends, axis titles).
NO2 <- NO2 + theme_bw() + theme(
panel.grid = element_blank(),
text = element_text(colour = "black"),
panel.background = element_blank(),
axis.line = element_line(colour = "black",size=0),
axis.text = element_text(colour = "black",size=12),
axis.text.x = element_text(angle = 90, size=12,face = "plain", vjust = 0.5),
# axis.text.x = element_blank(),
legend.text = element_text(face = "plain",size = 16),
legend.title = element_text(size=16),
legend.position = "right",
# axis.title = element_text(size=16,face=NULL),
axis.title.x = element_blank(),
axis.text.y = element_text(size=14),
strip.text.x = element_text(size=10,face="bold"),
panel.spacing = unit(0, "lines"),
panel.border = element_rect(colour="black",size=0,fill=NA),
axis.ticks = element_line(colour = "black"),
axis.ticks.y = element_line(colour="black"),
# axis.ticks.x = element_blank(),
#panel.grid.major.y = element_line(colour = "black"),
axis.line.y = element_line(colour="black"),
panel.spacing.y = unit(0,"points"),
plot.margin = margin(0,0,0,0,"pt")
) +
scale_fill_manual(values = c("blue","black","red","orange","purple")) +
scale_colour_manual(values = c("blue","black","red","orange","purple")) +
scale_x_continuous(limits = c(XLowLim, XHighLim), breaks = seq(XSeqLow,XSeqHigh,XSeqStep))
NULL
NO2 <- NO2 + facet_grid(Type~Treat, scales = "fixed",switch = "y")
# NO2 <- NO2 + scale_fill_manual(values = c("black","blue")) + scale_colour_manual(values = c("black","blue"))
print(NO2)
## Set the axis titles, legend titles, and other titles. Change the string as appropriate:
bar_axis_x <- "Time"
bar_axis_y <- "Total NO3 (µM)"
bar_legend <- "Type"
bar_x_limits <- c(0.5,0.5)
## Filter for NO3 and plot
data_no3 = subset(Data1, Data1$Type == "NO3")
NO3 <- ggplot(data=data_no3, aes(x=Days, y=Avg,
group = SampleName,
# fill = as.factor(get(meta_col)),
# color = as.factor(get(meta_col))
)) +
geom_point(size = 1, shape = 22, aes(colour = as.factor(Rep))) +
geom_smooth(method = "loess",se = FALSE, span = LineSpan, aes(colour = as.factor(Rep)), size = 1) +
geom_line(linetype = 2, size = 0.5, aes(colour = as.factor(Rep))) +
geom_ribbon(aes(ymin = StdMin, ymax = StdMax), alpha = 0.2) +
# scale_y_continuous(breaks = c(0,10,20,30,40,50),limits = c(0,nh4_lim)) +
scale_y_continuous(limits = c(0,no3_max)) +
# geom_smooth(aes(x = Days, y = Max3, colour = as.factor(Rep)), se = FALSE, span = 0.7, linetype = 2, size = 0.5) +
xlab(bar_axis_x) +
ylab(bar_axis_y) +
NULL
## Set legend titles.
NO3 <- NO3 + guides(fill=guide_legend(title=bar_legend))
## Modify the general visual theme (i.e., background, legends, axis titles).
NO3 <- NO3 + theme_bw() + theme(
panel.grid = element_blank(),
text = element_text(colour = "black"),
panel.background = element_blank(),
axis.line = element_line(colour = "black",size=0),
axis.text = element_text(colour = "black",size=12),
axis.text.x = element_text(angle = 90, size=12,face = "plain", vjust = 0.5),
# axis.text.x = element_blank(),
legend.text = element_text(face = "plain",size = 16),
legend.title = element_text(size=16),
legend.position = "right",
# axis.title = element_text(size=16,face=NULL),
axis.title.x = element_blank(),
axis.text.y = element_text(size=14),
strip.text.x = element_text(size=10,face="bold"),
panel.spacing = unit(0, "lines"),
panel.border = element_rect(colour="black",size=0,fill=NA),
axis.ticks = element_line(colour = "black"),
axis.ticks.y = element_line(colour="black"),
# axis.ticks.x = element_blank(),
#panel.grid.major.y = element_line(colour = "black"),
axis.line.y = element_line(colour="black"),
panel.spacing.y = unit(0,"points"),
plot.margin = margin(0,0,0,0,"pt")
) +
scale_fill_manual(values = c("blue","black","red","orange","purple")) +
scale_colour_manual(values = c("blue","black","red","orange","purple")) +
scale_x_continuous(limits = c(XLowLim, XHighLim), breaks = seq(XSeqLow,XSeqHigh,XSeqStep))
NULL
NO3 <- NO3 + facet_grid(Type~Treat, scales = "fixed",switch = "y")
# NO3 <- NO3 + scale_fill_manual(values = c("black","blue")) + scale_colour_manual(values = c("black","blue"))
print(NO3)
NH4 + NO2 + plot_layout(nrow = 2, guides = "collect")
## Set directory and load your files.
## Clears your environment.
rm(list=ls())
gc()
## Set your working directory.
setwd("C:/Users/alexu/OneDrive/UW/Grad Studies/PhD Studies/")
## Assign your data files to variables. A tab-delimited text file is best. I create two identical variables so you can modify one and always have the original to go back to.
# ASV_table_filepath <- "Experiments/Chapter 1/Alex/Fish_biomass_exp/Fish_biomass_specdata/2022_Fishbiomass_master.xlsm",sheet = 4)
Data1_OG <- read_excel("Experiments/Chapter 3 Aquarium supplement/Supp_exp/Waterchem/Spike_experiment/2024_08_13_140uM/2024_140uM_spike_master.xlsx", sheet = 1)
# Data1_OG <- read.table("Experiments/Chapter 4 Misc/Activity comparisons/2024_05_activities/2024_05_Full_master.xlsx", header = TRUE, sep = "\t")
Data1 <- Data1_OG
Data2 <- read_excel("Experiments/Chapter 3 Aquarium supplement/Supp_exp/Waterchem/2024_Waterchem_masters.xlsx", sheet = 3)
# std_err <- function(x) sd(x)/sqrt(length(x))
## Set time or date as a factor
# Data1$Fish <- as.factor(Data1$Fish)
# Data1_OG <- read.table(ASV_table_filepath, header = TRUE, sep = "\t")
# Data1 <- read.table(ASV_table_filepath, header = TRUE, sep = "\t")
# Filter specific samples
# Data1 = filter(Data1, Data1$Time != "Unknown")
# Data1 = filter(Data1, Data1$Treatment == "Control")
# Data1 <- filter(Data1, Data1$Culture != "AQ")
# Data1 <- subset(Data1, Data1$Treatment == "DMSO")
# Data1 = filter(Data1, Data1$Treatment == "Gly")
# Data1$Time <- as.factor(Data1$Time)
# Data1$Treatment <- as.character(Data1$Treatment)
# ## Missing data, so must be removed
# Data1 <- filter(Data1, Data1$Time != "2012_05_15")
# Data1 <- filter(Data1, Data1$Time != "2012_05_22")
# #
# Data1 = filter(Data1, (Data1$Treatment == "Unt" | Data1$Treatment == "Control"))
# Data1 = filter(Data1, !(Data1$Rep == 3 & Data1$Culture == "AQCXCyc"))
# Data1 = filter(Data1, !(Data1$Rep == 3 & Data1$Culture == "Cycle"))
# ## Remove ammonia timepoints
# Data1 = filter(Data1, !(Data1$Type == "NH4" & Data1$Time == 48))
# Data1 = filter(Data1, !(Data1$Type == "NH4" & Data1$Time == 96))
# Data1 = filter(Data1, !(Data1$Type == "NH4" & Data1$Time == 72))
# Data1 = filter(Data1, !(Data1$Type == "NH4" & Data1$Time == 120))
# Data1 = subset(Data1, Data1$Rep == "1")
# Data1 = subset(Data1, Data1$Treat == "CX")
# # Data1 = subset(Data1, Data1$Date != "06_21")
# Data1 = subset(Data1, Data1$Date != "06_12_WC")
# Data1 = subset(Data1, Data1$Date != "06_17")
# Data1 = subset(Data1, Data1$Date != "06_21")
# Data1 = subset(Data1, Data1$Date != "06_25WC")
# Data1 = subset(Data1, Data1$Date != "06_07")
# Data1 = subset(Data1, Data1$Date != "06_10")
# Data1 = subset(Data1, Data1$Treat == "AQ")
# day_removal_list = c(0,2:10,14)
# Data1 = subset(Data1, Data1$Day %in% day_removal_list)
#
# Data1 = subset(Data1, Data1$Days != 20)
# Data1 = subset(Data1, Data1$Days != 35)
# Data1 <- filter(Data1, !(Culture == "Standard" & Data1$Type == "NH4"))
# Data1 <- filter(Data1, !(Data1$Time == "2013_01_09" & Data1$Type == "NO3"))
# Data1 <- filter(Data1, !(Data1$Time == "2013_01_13" & Data1$Type == "NO3"))
# # #
# Data1 = filter(Data1, Data1$Time != "22")
# Data1 = filter(Data1, Data1$Days != 148)
# Data1 = filter(Data1, Data1$Time != "2012_05_11")
# # set NH4,NO2, and NO3 values to 0 if they are below a threshold
Data1$Avg[Data1$Type == "NH4" & Data1$Avg < 5] <- 0
Data1$Avg[Data1$Type == "NO2" & Data1$Avg < 10] <- 0
Data1$Avg[Data1$Type == "NO3" & Data1$Avg < 10] <- 0
# Data1 <- rbind(Data1, Data2)
# Create stdmax and min, then remove zeros
Data1$StdMax = Data1$Avg + Data1$Std
Data1$StdMin = Data1$Avg - Data1$Std
Data1[Data1 < 0] = 0
nh4_max <- 200
no2_max <- 50
no3_max <- 10000
Data1$Date <- factor(Data1$Date)
Data1$Days <- Data1$Time
# Type ~ Culture is usually best, though requires filtering other treatments of the same culture.
Facet1 <- "Type"
Facet2 <- "Treat"
meta_col <- "Treatment"
XLowLim <- 0
XHighLim <- 150
XSeqLow <- 0
XSeqHigh <- 150
XSeqStep <- 12
LineSpan <- 0.1
## Set the axis titles, legend titles, and other titles. Change the string as appropriate:
bar_axis_x <- "Time"
bar_axis_y <- "Total NH3 (µM)"
bar_legend <- "Type"
bar_x_limits <- c(0.5,0.5)
## Filter for ammonia and plot
data_nh4 = subset(Data1, Data1$Type == "NH4")
NH4 <- ggplot(data=data_nh4, aes(x=Days, y=Avg,
group = SampleName,
# fill = as.factor(get(meta_col)),
# color = as.factor(get(meta_col))
)) +
geom_point(size = 1, shape = 22, aes(colour = as.factor(Rep))) +
geom_smooth(method = "loess",se = FALSE, span = LineSpan, aes(colour = as.factor(Rep)), size = 1) +
geom_line(linetype = 2, size = 0.5, aes(colour = as.factor(Rep))) +
geom_ribbon(aes(ymin = StdMin, ymax = StdMax), alpha = 0.2) +
# scale_y_continuous(breaks = c(0,10,20,30,40,50),limits = c(0,nh4_lim)) +
scale_y_continuous(limits = c(0,nh4_max)) +
xlab(bar_axis_x) +
ylab(bar_axis_y) +
# geom_smooth(aes(x = Days, y = Avg, colour = as.factor(Rep)), se = FALSE, span = 0.7, linetype = 2, size = 0.5) +
# geom_line(aes(x = data_nh4$Date, y = data_nh4$Avg_tot))
NULL
## Set legend titles.
NH4 <- NH4 + guides(fill=guide_legend(title=bar_legend))
## Modify the general visual theme (i.e., background, legends, axis titles).
NH4 <- NH4 + theme_bw() + theme(
panel.grid = element_blank(),
text = element_text(colour = "black"),
panel.background = element_blank(),
axis.line = element_line(colour = "black",size=0),
axis.text = element_text(colour = "black",size=12),
axis.text.x = element_text(angle = 90, size=12,face = "plain", vjust = 0.5),
# axis.text.x = element_blank(),
legend.text = element_text(face = "plain",size = 16),
legend.title = element_text(size=16),
legend.position = "right",
# axis.title = element_text(size=16,face=NULL),
axis.title.x = element_blank(),
axis.text.y = element_text(size=14),
strip.text.x = element_text(size=10,face="bold"),
panel.spacing = unit(0, "lines"),
panel.border = element_rect(colour="black",size=0,fill=NA),
axis.ticks = element_line(colour = "black"),
axis.ticks.y = element_line(colour="black"),
# axis.ticks.x = element_blank(),
#panel.grid.major.y = element_line(colour = "black"),
axis.line.y = element_line(colour="black"),
panel.spacing.y = unit(0,"points"),
plot.margin = margin(0,0,0,0,"pt")
) +
scale_fill_manual(values = c("blue","black","red","orange","purple","green")) +
scale_colour_manual(values = c("blue","black","red","orange","purple","green")) +
scale_x_continuous(limits = c(XLowLim, XHighLim), breaks = seq(XSeqLow,XSeqHigh,XSeqStep))
NULL
NH4 <- NH4 + facet_grid(Type ~ Treat, scales = "fixed",switch = "y")
print(NH4)
# Type ~ Culture is usually best, though requires filtering other treatments of the same culture.
Facet1 <- "Type"
Facet2 <- "Treat"
meta_col <- "Treatment"
XLowLim <- 0
XHighLim <- 150
XSeqLow <- 0
XSeqHigh <- 150
XSeqStep <- 12
LineSpan <- 0.5
## Set the axis titles, legend titles, and other titles. Change the string as appropriate:
bar_axis_x <- "Time"
bar_axis_y <- "Total NH3 (µM)"
bar_legend <- "Type"
bar_x_limits <- c(0.5,0.5)
## Filter for ammonia and plot
data_nh4 = subset(Data1, Data1$Type == "NH4")
NH4 <- ggplot(data=data_nh4, aes(x=Days, y=Avg,
group = SampleName,
# fill = as.factor(get(meta_col)),
# color = as.factor(get(meta_col))
)) +
geom_point(size = 1, shape = 22, aes(colour = as.factor(Rep))) +
geom_smooth(method = "loess",se = FALSE, span = LineSpan, aes(colour = as.factor(Rep)), size = 1) +
geom_line(linetype = 2, size = 0.5, aes(colour = as.factor(Rep))) +
geom_ribbon(aes(ymin = StdMin, ymax = StdMax), alpha = 0.2) +
# scale_y_continuous(breaks = c(0,10,20,30,40,50),limits = c(0,nh4_lim)) +
scale_y_continuous(limits = c(0,nh4_max)) +
xlab(bar_axis_x) +
ylab(bar_axis_y) +
# geom_smooth(aes(x = Days, y = Avg, colour = as.factor(Rep)), se = FALSE, span = 0.7, linetype = 2, size = 0.5) +
# geom_line(aes(x = data_nh4$Date, y = data_nh4$Avg_tot))
NULL
## Set legend titles.
NH4 <- NH4 + guides(fill=guide_legend(title=bar_legend))
## Modify the general visual theme (i.e., background, legends, axis titles).
NH4 <- NH4 + theme_bw() + theme(
panel.grid = element_blank(),
text = element_text(colour = "black"),
panel.background = element_blank(),
axis.line = element_line(colour = "black",size=0),
axis.text = element_text(colour = "black",size=12),
axis.text.x = element_text(angle = 90, size=12,face = "plain", vjust = 0.5),
# axis.text.x = element_blank(),
legend.text = element_text(face = "plain",size = 16),
legend.title = element_text(size=16),
legend.position = "right",
# axis.title = element_text(size=16,face=NULL),
axis.title.x = element_blank(),
axis.text.y = element_text(size=14),
strip.text.x = element_text(size=10,face="bold"),
panel.spacing = unit(0, "lines"),
panel.border = element_rect(colour="black",size=0,fill=NA),
axis.ticks = element_line(colour = "black"),
axis.ticks.y = element_line(colour="black"),
# axis.ticks.x = element_blank(),
#panel.grid.major.y = element_line(colour = "black"),
axis.line.y = element_line(colour="black"),
panel.spacing.y = unit(0,"points"),
plot.margin = margin(0,0,0,0,"pt")
) +
scale_fill_manual(values = c("blue","black","red","orange","purple","green")) +
scale_colour_manual(values = c("blue","black","red","orange","purple","green")) +
scale_x_continuous(limits = c(XLowLim, XHighLim), breaks = seq(XSeqLow,XSeqHigh,XSeqStep))
NULL
NH4 <- NH4 + facet_grid(Type ~ Treat, scales = "fixed",switch = "y")
print(NH4)
## Filter for nitrite and plot
data_no2 = subset(Data1, Data1$Type == "NO2")
NO2 <- ggplot(data=data_no2, aes(x=Date, y=Avg,
group = SampleName,
# fill = as.factor(get(meta_col)),
# color = as.factor(get(meta_col))
))
## Set the axis titles, legend titles, and other titles. Change the string as appropriate:
bar_axis_x <- "Time"
bar_axis_y <- "Total NO2 (µM)"
bar_legend <- "Type"
bar_x_limits <- c(0.5,0.5)
## Filter for ammonia and plot
data_no2 = subset(Data1, Data1$Type == "NO2")
NO2 <- ggplot(data=data_no2, aes(x=Days, y=Avg,
group = SampleName,
# fill = as.factor(get(meta_col)),
# color = as.factor(get(meta_col))
)) +
geom_point(size = 1, shape = 22, aes(colour = as.factor(Rep))) +
geom_smooth(method = "loess",se = FALSE, span = LineSpan, aes(colour = as.factor(Rep)), size = 1) +
geom_line(linetype = 2, size = 0.5, aes(colour = as.factor(Rep))) +
geom_ribbon(aes(ymin = StdMin, ymax = StdMax), alpha = 0.2) +
# scale_y_continuous(breaks = c(0,10,20,30,40,50),limits = c(0,nh4_lim)) +
scale_y_continuous(limits = c(0,no2_max)) +
# geom_smooth(aes(x = Days, y = Max3, colour = as.factor(Rep)), se = FALSE, span = 0.7, linetype = 2, size = 0.5) +
xlab(bar_axis_x) +
# geom_line(aes(x = Date, y = Avg_tot))+
ylab(bar_axis_y) +
NULL
## Set legend titles.
NO2 <- NO2 + guides(fill=guide_legend(title=bar_legend))
## Modify the general visual theme (i.e., background, legends, axis titles).
NO2 <- NO2 + theme_bw() + theme(
panel.grid = element_blank(),
text = element_text(colour = "black"),
panel.background = element_blank(),
axis.line = element_line(colour = "black",size=0),
axis.text = element_text(colour = "black",size=12),
axis.text.x = element_text(angle = 90, size=12,face = "plain", vjust = 0.5),
# axis.text.x = element_blank(),
legend.text = element_text(face = "plain",size = 16),
legend.title = element_text(size=16),
legend.position = "right",
# axis.title = element_text(size=16,face=NULL),
axis.title.x = element_blank(),
axis.text.y = element_text(size=14),
strip.text.x = element_text(size=10,face="bold"),
panel.spacing = unit(0, "lines"),
panel.border = element_rect(colour="black",size=0,fill=NA),
axis.ticks = element_line(colour = "black"),
axis.ticks.y = element_line(colour="black"),
# axis.ticks.x = element_blank(),
#panel.grid.major.y = element_line(colour = "black"),
axis.line.y = element_line(colour="black"),
panel.spacing.y = unit(0,"points"),
plot.margin = margin(0,0,0,0,"pt")
) +
scale_fill_manual(values = c("blue","black","red","orange","purple")) +
scale_colour_manual(values = c("blue","black","red","orange","purple")) +
scale_x_continuous(limits = c(XLowLim, XHighLim), breaks = seq(XSeqLow,XSeqHigh,XSeqStep))
NULL
NO2 <- NO2 + facet_grid(Type~Treat, scales = "fixed",switch = "y")
# NO2 <- NO2 + scale_fill_manual(values = c("black","blue")) + scale_colour_manual(values = c("black","blue"))
print(NO2)
## Filter for ammonia and plot
data_nh4 = subset(Data1, Data1$Type == "NH4")
NH4 <- ggplot(data=data_nh4, aes(x=Days, y=Avg,
group = SampleName,
# fill = as.factor(get(meta_col)),
# color = as.factor(get(meta_col))
)) +
geom_point(size = 1, shape = 22, aes(colour = as.factor(Rep))) +
geom_smooth(method = "loess",se = FALSE, span = LineSpan, aes(colour = as.factor(Rep)), size = 1) +
# geom_line(linetype = 2, size = 0.5, aes(colour = as.factor(Rep))) +
geom_ribbon(aes(ymin = StdMin, ymax = StdMax), alpha = 0.2) +
# scale_y_continuous(breaks = c(0,10,20,30,40,50),limits = c(0,nh4_lim)) +
scale_y_continuous(limits = c(0,nh4_max)) +
xlab(bar_axis_x) +
ylab(bar_axis_y) +
# geom_smooth(aes(x = Days, y = Avg, colour = as.factor(Rep)), se = FALSE, span = 0.7, linetype = 2, size = 0.5) +
# geom_line(aes(x = data_nh4$Date, y = data_nh4$Avg_tot))
NULL
## Set legend titles.
NH4 <- NH4 + guides(fill=guide_legend(title=bar_legend))
## Modify the general visual theme (i.e., background, legends, axis titles).
NH4 <- NH4 + theme_bw() + theme(
panel.grid = element_blank(),
text = element_text(colour = "black"),
panel.background = element_blank(),
axis.line = element_line(colour = "black",size=0),
axis.text = element_text(colour = "black",size=12),
axis.text.x = element_text(angle = 90, size=12,face = "plain", vjust = 0.5),
# axis.text.x = element_blank(),
legend.text = element_text(face = "plain",size = 16),
legend.title = element_text(size=16),
legend.position = "right",
# axis.title = element_text(size=16,face=NULL),
axis.title.x = element_blank(),
axis.text.y = element_text(size=14),
strip.text.x = element_text(size=10,face="bold"),
panel.spacing = unit(0, "lines"),
panel.border = element_rect(colour="black",size=0,fill=NA),
axis.ticks = element_line(colour = "black"),
axis.ticks.y = element_line(colour="black"),
# axis.ticks.x = element_blank(),
#panel.grid.major.y = element_line(colour = "black"),
axis.line.y = element_line(colour="black"),
panel.spacing.y = unit(0,"points"),
plot.margin = margin(0,0,0,0,"pt")
) +
scale_fill_manual(values = c("blue","black","red","orange","purple","green")) +
scale_colour_manual(values = c("blue","black","red","orange","purple","green")) +
scale_x_continuous(limits = c(XLowLim, XHighLim), breaks = seq(XSeqLow,XSeqHigh,XSeqStep))
NULL
NH4 <- NH4 + facet_grid(Type ~ Treat, scales = "fixed",switch = "y")
print(NH4)
## Filter for nitrite and plot
data_no2 = subset(Data1, Data1$Type == "NO2")
NO2 <- ggplot(data=data_no2, aes(x=Date, y=Avg,
group = SampleName,
# fill = as.factor(get(meta_col)),
# color = as.factor(get(meta_col))
))
## Set the axis titles, legend titles, and other titles. Change the string as appropriate:
bar_axis_x <- "Time"
bar_axis_y <- "Total NO2 (µM)"
bar_legend <- "Type"
bar_x_limits <- c(0.5,0.5)
## Filter for ammonia and plot
data_no2 = subset(Data1, Data1$Type == "NO2")
NO2 <- ggplot(data=data_no2, aes(x=Days, y=Avg,
group = SampleName,
# fill = as.factor(get(meta_col)),
# color = as.factor(get(meta_col))
)) +
geom_point(size = 1, shape = 22, aes(colour = as.factor(Rep))) +
geom_smooth(method = "loess",se = FALSE, span = LineSpan, aes(colour = as.factor(Rep)), size = 1) +
# geom_line(linetype = 2, size = 0.5, aes(colour = as.factor(Rep))) +
geom_ribbon(aes(ymin = StdMin, ymax = StdMax), alpha = 0.2) +
# scale_y_continuous(breaks = c(0,10,20,30,40,50),limits = c(0,nh4_lim)) +
scale_y_continuous(limits = c(0,no2_max)) +
# geom_smooth(aes(x = Days, y = Max3, colour = as.factor(Rep)), se = FALSE, span = 0.7, linetype = 2, size = 0.5) +
xlab(bar_axis_x) +
# geom_line(aes(x = Date, y = Avg_tot))+
ylab(bar_axis_y) +
NULL
## Set legend titles.
NO2 <- NO2 + guides(fill=guide_legend(title=bar_legend))
## Modify the general visual theme (i.e., background, legends, axis titles).
NO2 <- NO2 + theme_bw() + theme(
panel.grid = element_blank(),
text = element_text(colour = "black"),
panel.background = element_blank(),
axis.line = element_line(colour = "black",size=0),
axis.text = element_text(colour = "black",size=12),
axis.text.x = element_text(angle = 90, size=12,face = "plain", vjust = 0.5),
# axis.text.x = element_blank(),
legend.text = element_text(face = "plain",size = 16),
legend.title = element_text(size=16),
legend.position = "right",
# axis.title = element_text(size=16,face=NULL),
axis.title.x = element_blank(),
axis.text.y = element_text(size=14),
strip.text.x = element_text(size=10,face="bold"),
panel.spacing = unit(0, "lines"),
panel.border = element_rect(colour="black",size=0,fill=NA),
axis.ticks = element_line(colour = "black"),
axis.ticks.y = element_line(colour="black"),
# axis.ticks.x = element_blank(),
#panel.grid.major.y = element_line(colour = "black"),
axis.line.y = element_line(colour="black"),
panel.spacing.y = unit(0,"points"),
plot.margin = margin(0,0,0,0,"pt")
) +
scale_fill_manual(values = c("blue","black","red","orange","purple")) +
scale_colour_manual(values = c("blue","black","red","orange","purple")) +
scale_x_continuous(limits = c(XLowLim, XHighLim), breaks = seq(XSeqLow,XSeqHigh,XSeqStep))
NULL
NO2 <- NO2 + facet_grid(Type~Treat, scales = "fixed",switch = "y")
# NO2 <- NO2 + scale_fill_manual(values = c("black","blue")) + scale_colour_manual(values = c("black","blue"))
print(NO2)
shiny::runApp('C:/Users/alexu/OneDrive/UW/Grad Studies/GitHub/AOViz-Refined')
